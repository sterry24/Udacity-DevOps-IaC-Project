Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    S3BucketName:
        Description: S3 bucket name where app is located
        Type: String

    AppZipName:
        Description: web app archive file (zip)
        Type: String
        AllowedPattern: ^.*\.zip$

Resources:
  ## Project Req: LoadBalancer allow all inbound public on port 80,
  ## outbound use port 80 for internal servers
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ## Project Req: Communicate on port 80, so need inbound open
  ## use for LoadBalancer and LoadBalancerHealthCheck
  ## outbound unrestricted
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80 ## 8080
          ToPort: 80   ## 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          # Get awscli and apache2
          sudo apt-get install unzip awscli -y
          sudo apt-get install apache2 -y
          ## start apache service
          sudo systemctl start apache2
          sudo systemctl enable apache2
          cd /var/www/html
          ## copy app from bucket
          sudo aws s3 cp s3://${S3BucketName}/${AppZipName} .
          sudo unzip -o ${AppZipName}
          sudo systemctl restart apache2
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t3.medium
      ## confirmed this is Ubuntu -- project requirement
      ##ImageId: ami-005bdb005fb00e791
      ImageId: ami-0d1cd67c26f5fca19
      ## amazon linux
      #ImageId: ami-0528a5175983e7f28
      IamInstanceProfile: 
        Fn::ImportValue: 
          !Sub '${EnvironmentName}-IAM-NAME'
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '3'
      MaxSize: '5'
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
          - Field: path-pattern
            Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:
  WebUrl:
    Description: URL for app
    Value: !Join ['', ['http://', !GetAtt [ WebAppLB, DNSName]]]
